// 通用图片裁切
// https://git.corpautohome.com/gp_rd_fe/tools/tech/utils/tree/master/packages/img-crop#readme

/* eslint-disable no-multi-spaces, consistent-return */
const $host = '(\\.autoimg\\.cn/)';
const $path = '(/g\\d+/M\\d+[A-F]?/[\\dA-z]+/[\\dA-z]+/)'; // 目录
const $rule = '(.*autohome[^_]*__)?'; // 裁切规则
const $suffix = 'autohomecar__'; // 裁切规则后缀
const $name = '(.+\\.(jpe?g|png|gif|bmp))'; // 文件名

// dis 2.0 裁切（松散规则）
function rule_dis(src, rule) {
  const $1 = '(//.+)';  // '//' + 子域名（保留）
  const $2 = $host;     // .autoimg.cn/（保留）
  const $3 = '(.*)';    // 存储目录（保留）
  const $4 = $path;     // 存储目录（保留）
  const $5 = $rule;     // 裁切规则（删除）
  const $6 = $name;     // 图片名（保留）
  const reg = new RegExp(`${$1}${$2}${$3}${$4}${$5}${$6}`, 'i');

  if (reg.test(src)) {
    return src.replace(reg, `$1$2$3$4${rule}${$suffix}$6`);
  }
}

// 养车 yc[01]\.autoimg.cn 只能裁切固定的几个尺寸：
// 124x180_0_q30_ 186x140_0_q75_ 240x180_0_q30_
// 详见 http://192.168.100.11/rulelist
function rule_yc(src, rule) {
  const $1 = '(//yc[01])'; // '//' + 子域名（保留）
  const $2 = $host;        // .autoimg.cn/（保留）
  const $3 = '(imgs/yc/[\\w/]+/)'; // 存储目录（保留）
  const $4 = '(.+_)?';     // 裁切规则（删除）
  const $5 = $name;        // 图片名（保留）
  const reg = new RegExp(`${$1}${$2}${$3}${$4}${$5}`, 'i');

  if (reg.test(src)) {
    return src.replace(reg, `$1$2$3${rule}$5`);
  }
}

// 二手车 2sc2.autoimg.cn/escimg
function rule_2sc(src, rule) {
  const reg = /\/\/2sc2/;

  if (reg.test(src)) {
    return rule_dis(src.replace(reg, '//www2'), rule);
  }
}

// 论坛 club2.autoimg.cn/album
function rule_club(src, rule) {
  const $1 = '(//)';                               // 协议后面的两个 '//'（保留）
  const $2 = '(.+)';                               // 子域名（需要替换为 m1）
  const $3 = $host;                                // .autoimg.cn/（保留）
  const $4 = '(album/?)?';                         // 一级目录（需要替换为 clubdfs）
  const $5 = $path.replace('/g', '/?g');           // 存储目录（保留）
  const $6 = '(userphotos/\\d+/\\d+/\\d+/\\d+/)?'; // 老存储目录（删除）
  const $7 = '(ssq_|\\d+_|jh\\d+_)?';              // 老裁切规则（删除）
  const $8 = $name;                                // 图片名（保留）
  const reg = new RegExp(`${$1}${$2}${$3}${$4}${$5}${$6}${$7}${$8}`, 'i');

  if (reg.test(src)) {
    return src.replace(reg, `$1m1$3clubdfs/$5${rule}${$suffix}$8`);
  }
}

// 产品库 car[01]\.(\.m)?autoimg.cn
function rule_car(src, rule) {
  const $1 = '(//)';        // 协议后面的两个 '//'（保留）
  const $2 = '(car[01])';   // 子域名（需要替换为 m0）
  const $3 = '(\\.m)?';     // 子域名（删除）
  const $4 = $host;         // .autoimg.cn/（保留）
  const $5 = '([\\w/]+/)';  // 存储目录（保留）
  const $6 = '(.+_)?';      // 老裁切规则（删除）
  const $7 = $name;         // 图片名（保留）
  const reg = new RegExp(`${$1}${$2}${$3}${$4}${$5}${$6}${$7}`, 'i');

  if (reg.test(src)) {
    return src.replace(reg, `$1m0$4cardfs/$5${rule}${$suffix}$7`);
  }
}

// 游记/旅行家
function rule_you(src, rule) {
  const $1 = '(//)';        // 协议后面的两个 '//'（保留）
  const $2 = '(img[23])';   // 子域名（需要替换为 m1）
  const $3 = $host;         // .autoimg.cn/（保留）
  const $4 = '(travelplat|pano)'; // 存储目录（保留）
  const $5 = $path;         // 存储目录（保留）
  const $6 = $rule;         // 裁切规则（删除）
  const $7 = $name;         // 图片名（保留）
  const reg = new RegExp(`${$1}${$2}${$3}${$4}${$5}${$6}${$7}`, 'i');

  if (reg.test(src)) {
    return src.replace(reg, `$1m1$3$4$5${rule}${$suffix}$7`);
  }
}

function checkWebp() {
  try {
    return document.createElement('canvas')
      .toDataURL('image/webp')
      .indexOf('data:image/webp') === 0;
  } catch (err) {
    return false;
  }
}

let isSupportWebp; // 当前环境是否支持 webp

// 七牛云 & 车家号
function rule_qiniu(src, rule) {
  const reg1 = /\?image(View|Mogr)2.+/;
  const $1 = `(//qnwww[23]${$host}youchuang${$path}${$name})`;
  const reg2 = new RegExp(`${$1}(\\?imageView2.+|\\?imageMogr2.+)?`, 'i');

  if (reg1.test(src) || (reg2.test(src))) {
    const newRule = rule.replace(/(\d+)x(\d+)(.+q(\d+).+)?/, (r, w, h, r2, q = 87) => {
      if (isSupportWebp === undefined) { isSupportWebp = checkWebp(); }
      const format = `format/${isSupportWebp ? 'webp' : `jpg/q/${q}`}/`;
      return `?imageView2/1/interlace/1/w/${w}/h/${h}/${format}`;
    });

    if (reg1.test(src)) {
      return src.replace(reg1, `${newRule}`);
    }

    return src.replace(reg2, `$1${newRule}`);
  }
}

function universal(src, rule) {
  return (rule_2sc(src, rule) // 二手车
    || rule_club(src, rule)   // 论坛
    || rule_car(src, rule)    // 产品库
    || rule_you(src, rule)    // 游记/旅行家
    || rule_yc(src, rule)     // 养车
    || rule_qiniu(src, rule)  // 七牛云 & 车家号
    || rule_dis(src, rule)    // dis通用裁切
  );
}

/**
 * 图片裁切
 *
 * @param {string} src 图片地址
 * @param {string} rule 裁切规则
 * @returns {string} 裁切后的图片地址
 */
function imgCrop(src, rule) {
  // 只处理 autoimg.cn 域
  if (!new RegExp(`//.+${$host}.*${$name}`, 'i').test(src)) {
    return src;
  }

  const newSrc = universal(src, rule);
  return (newSrc || src).replace(/https?:/, '');
}

/**
 * 在 iPad 中使用多倍尺寸
 *
 * @param {string} rule 裁切规则
 * @param {number} scale 缩放比例, 默认 2.56
 * @returns {string} 新裁切规则
 */
function imgScale(rule, scale = 2.56) {
  if (!/iPad/i.test(navigator.userAgent)) { return rule; }

  return rule.replace(/(\d+)x(\d+)/, (r, width, height) =>
    `${Math.ceil(width * scale)}x${Math.ceil(height * scale)}`);
}

/**
 * 获取资讯图片地址 (16年以后都有16:9图)
 *
 * @param {Object} data                - 含有多个图片地址的 Object
 * @param {string} data.AppImg         - APP 代表图 16:9(560*315)
 * @param {string} data.FirstCoverImg  - APP 封面图1 4:3(560*420) 接口实际输出16:9
 * @param {string} data.SecondCoverImg - APP 封面图2 4:3(560*420) 接口实际输出16:9
 * @param {string} data.ThirdCoverImg  - APP 封面图3 4:3(560*420) 接口实际输出16:9
 * @param {string} data.picUrls        - PC/M 代表图 4:3(400*300)
 * @returns {string} 图片地址
 */
function getImgSrc(data, isDefault = false) {
  return (
    data.picUrls
    || data.AppImg
    || data.FirstCoverImg
    || data.SecondCoverImg
    || data.ThirdCoverImg
    || (isDefault ? '//s.autoimg.cn/sou/soum/images/default.png' : '')
  );
}

export { checkWebp, getImgSrc, imgCrop, imgScale };
